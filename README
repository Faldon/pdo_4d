Installing PDO_4D
-----------------
4D is a registered trademark of 4D SAS

IMPORTANT NOTICE
================
It seems, the native c module is broken on modern 64bit systems.
The fetch methods generate SEGFAULTS on Debian 10 and Ubuntu 18.04 for the
distribution default Php versions (and newer ones also).
While it strangely does run on current Arch Linux x64 systems, it seems that
only the x86-64 build (nearly all recent Linux desktop and server environments)
are affected.
If you encounter this problem you can try the native php implementation found
[here](https://github.com/faldon/DB4D.git)

### Technical information for developers
When debugging with Valgrind it occurs to me, that getting the column types
as well as converting the field data to strings trigger the segmentation fault
when using the memcpy function.
This may be the reason why the code still works on non x86-64 platforms.
I don't have access to 4D Databases anymore, so I am not able to debug and
fix this error any further.


BUILDING ON UNIX etc.
=====================

To compile your new extension, you will have to execute the following steps:

1.  $ phpize
2.  $ ./configure --with-pdo_4d
3.  $ make clean
4.  $ make
5.  $ make test
6.  $ [sudo] make install



BUILDING ON WINDOWS
===================

The extension provides the VisualStudio V6 project file 

  pdo_4d.dsp
To compile the extension you open this file using VisualStudio,
select the apropriate configuration for your installation
(either "Release_TS" or "Debug_TS") and create "php_pdo_4d.dll"

After successfull compilation you have to copy the newly
created "pdo_4d.dll" to the PHP
extension directory (default: C:\PHP\extensions).


TESTING
=======

You can now load the extension using a php.ini directive

  extension="pdo_4d.[so|dll]"

or load it at runtime using the dl() function

  dl("pdo_4d.[so|dll]");

The extension should now be available, you can test this
using the extension_loaded() function:

  if (extension_loaded("pdo_4d"))
    echo "pdo_4d loaded :)";
  else
    echo "something is wrong :(";

The extension will also add its own block to the output
of phpinfo();

